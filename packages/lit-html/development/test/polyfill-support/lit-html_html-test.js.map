{"version":3,"file":"lit-html_html-test.js","sourceRoot":"","sources":["../../../src/test/polyfill-support/lit-html_html-test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport '../../polyfill-support.js';\nimport {html, render as litRender} from '../../lit-html.js';\nimport {ref, createRef} from '../../directives/ref.js';\nimport {repeat} from '../../directives/repeat.js';\nimport {cache} from '../../directives/cache.js';\nimport {assert} from '@esm-bundle/chai';\nimport {renderShadowRoot, wrap, shadowRoot} from '../test-utils/shadow-root.js';\n\nimport '../lit-html_test.js';\n// selected directive tests\nimport '../directives/class-map_test.js';\nimport '../directives/style-map_test.js';\nimport '../directives/live_test.js';\nimport '../directives/ref_test.js';\nimport '../directives/repeat_test.js';\nimport '../directives/template-content_test.js';\nimport '../directives/unsafe-html_test.js';\n\nconst extraGlobals = window as LitExtraGlobals;\n\nsuite('polyfill-support rendering', () => {\n  test('style elements apply in shadowRoots', () => {\n    const container = document.createElement('scope-1');\n    wrap(document.body).appendChild(container);\n    (wrap(container) as Element).attachShadow({mode: 'open'});\n    const result = html`\n      <style>\n        div {\n          border: 2px solid blue;\n        }\n      </style>\n      <div>Testing...</div>\n    `;\n    renderShadowRoot(result, container);\n    const div = shadowRoot(container)!.querySelector('div');\n    assert.equal(\n      getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n      '2px'\n    );\n    wrap(document.body).removeChild(container);\n  });\n\n  test('style elements apply in shadowRoots in nested templates', () => {\n    const container = document.createElement('scope-2');\n    wrap(document.body).appendChild(container);\n    const result = html`\n      <style>\n        div {\n          border: 4px solid orange;\n        }\n      </style>\n      <div>Testing...</div>\n      ${html`\n        <style>\n          span {\n            border: 5px solid tomato;\n          }\n        </style>\n        <span>Testing...</span>\n      `}\n    `;\n    renderShadowRoot(result, container);\n    const div = shadowRoot(container)!.querySelector('div');\n    assert.equal(\n      getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n      '4px'\n    );\n    const span = shadowRoot(container)!.querySelector('span');\n    assert.equal(\n      getComputedStyle(span!).getPropertyValue('border-top-width').trim(),\n      '5px'\n    );\n    // all styles are removed\n    const styles = shadowRoot(container)!.querySelectorAll('style');\n    // if ShadyDOM is in use, all styles should be removed from the template.\n    if (extraGlobals.ShadyDOM?.inUse) {\n      assert.equal(styles.length, 0);\n    }\n    wrap(document.body).removeChild(container);\n  });\n\n  test('late added styles are retained and not scoped', () => {\n    const container = document.createElement('scope-late');\n    wrap(document.body).appendChild(container);\n    const getResult = (includeLate = false) => html`\n      <style>\n        div {\n          border: 4px solid orange;\n        }\n      </style>\n      <div>Testing...</div>\n      ${\n        includeLate\n          ? html`<style>div { border: 5px solid tomato; }</style>late`\n          : ''\n      }\n    `;\n    renderShadowRoot(getResult(), container);\n    const div = shadowRoot(container)!.querySelector('div');\n    assert.equal(\n      getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n      '4px'\n    );\n    renderShadowRoot(getResult(true), container);\n    // The late style applies but the rule has lower precedence so the the\n    // correctly scoped style still rules.\n    assert.equal(\n      getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n      '4px'\n    );\n    // if ShadyDOM is in use, the late added style should leak\n    if (extraGlobals.ShadyDOM?.inUse) {\n      // late added styles are retained\n      const styles = shadowRoot(container)!.querySelectorAll('style');\n      assert.equal(styles.length, 1);\n      const d = document.createElement('div');\n      document.body.appendChild(d);\n      assert.equal(\n        getComputedStyle(d).getPropertyValue('border-top-width').trim(),\n        '5px'\n      );\n      document.body.removeChild(d);\n    }\n    wrap(document.body).removeChild(container);\n  });\n\n  test('results render to multiple containers', () => {\n    const container1 = document.createElement('div');\n    const container2 = document.createElement('div');\n    wrap(document.body).appendChild(container1);\n    wrap(document.body).appendChild(container2);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const getResult = (data: any) => html`${data.a}-${data.b}-${data.c}`;\n    renderShadowRoot(getResult({a: 1, b: 2, c: 3}), container1);\n    renderShadowRoot(getResult({a: 4, b: 5, c: 6}), container2);\n    assert.equal(shadowRoot(container1)!.textContent, '1-2-3');\n    assert.equal(shadowRoot(container2)!.textContent, '4-5-6');\n    renderShadowRoot(getResult({a: 11, b: 22, c: 33}), container1);\n    renderShadowRoot(getResult({a: 44, b: 55, c: 66}), container2);\n    assert.equal(shadowRoot(container1)!.textContent, '11-22-33');\n    assert.equal(shadowRoot(container2)!.textContent, '44-55-66');\n    wrap(document.body).removeChild(container1);\n    wrap(document.body).removeChild(container2);\n  });\n\n  test('multiple renders re-use rendered DOM', () => {\n    const container = document.createElement('scope-re-use');\n    wrap(document.body).appendChild(container);\n    const renderTemplate = (a: string) => {\n      const result = html` <div id=\"a\">${a}</div> `;\n      renderShadowRoot(result, container);\n    };\n    renderTemplate('a');\n    const renderedNode = shadowRoot(container)!.querySelector('#a');\n    renderTemplate('b');\n    assert.equal(shadowRoot(container)!.querySelector('#a'), renderedNode);\n    wrap(document.body).removeChild(container);\n  });\n\n  test('styles with css custom properties render', () => {\n    const container = document.createElement('scope-4');\n    wrap(document.body).appendChild(container);\n    const result = html`\n      <style>\n        :host {\n          --border: 2px solid orange;\n        }\n        div {\n          border: var(--border);\n        }\n      </style>\n      <div>Testing...</div>\n    `;\n    renderShadowRoot(result, container);\n    if (extraGlobals.ShadyCSS) {\n      extraGlobals.ShadyCSS.styleElement(container);\n    }\n    const div = shadowRoot(container)!.querySelector('div');\n    assert.equal(\n      getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n      '2px'\n    );\n    wrap(document.body).removeChild(container);\n  });\n\n  test('styles with css custom properties flow to nested shadowRoots', async () => {\n    const shadowContent = html`\n      <style>\n        :host {\n          display: block;\n          border: var(--border);\n        }\n      </style>\n      <div>Testing...</div>\n    `;\n\n    const container = document.createElement('scope-4a');\n    wrap(document.body).appendChild(container);\n    const result = html`\n      <style>\n        :host {\n          --border: 2px solid orange;\n        }\n      </style>\n      <scope-4a-sub></scope-4a-sub>\n    `;\n    renderShadowRoot(result, container);\n    if (extraGlobals.ShadyCSS) {\n      extraGlobals.ShadyCSS.styleElement(container);\n    }\n    const e = shadowRoot(container)!.querySelector('scope-4a-sub')!;\n    renderShadowRoot(shadowContent, e);\n    if (extraGlobals.ShadyCSS) {\n      extraGlobals.ShadyCSS.styleElement(e);\n    }\n    assert.equal(\n      getComputedStyle(e).getPropertyValue('border-top-width').trim(),\n      '2px'\n    );\n    wrap(document.body).removeChild(container);\n  });\n\n  test('styles with css custom properties flow to multiple instances of nested shadowRoots', async () => {\n    const nestedContent = html`\n      <style>\n        :host {\n          display: block;\n          border: var(--border);\n        }\n      </style>\n      <div>Testing...</div>\n    `;\n\n    const container = document.createElement('scope-4b');\n    wrap(document.body).appendChild(container);\n    renderShadowRoot(\n      html`\n        <style>\n          :host {\n            --border: 2px solid orange;\n          }\n        </style>\n        <scope-4b-sub></scope-4b-sub>\n        <scope-4b-sub></scope-4b-sub>\n      `,\n      container\n    );\n    const elements = shadowRoot(container)!.querySelectorAll('scope-4b-sub');\n    renderShadowRoot(nestedContent, elements[0]);\n    if (extraGlobals.ShadyCSS) {\n      extraGlobals.ShadyCSS.styleSubtree(elements[0]);\n    }\n    renderShadowRoot(nestedContent, elements[1]);\n    if (extraGlobals.ShadyCSS) {\n      extraGlobals.ShadyCSS.styleSubtree(elements[1]);\n    }\n    assert.equal(\n      getComputedStyle(elements[0]).getPropertyValue('border-top-width').trim(),\n      '2px'\n    );\n    assert.equal(\n      getComputedStyle(elements[1]).getPropertyValue('border-top-width').trim(),\n      '2px'\n    );\n    wrap(document.body).removeChild(container);\n  });\n\n  test('parts around styles with parts render/update', () => {\n    const container = document.createElement('scope-3a');\n    wrap(document.body).appendChild(container);\n    const renderTemplate = (a: string, b: string, c: string) => {\n      const result = html`<style></style>\n        <div id=\"a\">${a}</div>\n        <style>\n          div {\n            border: 1px solid black;\n          }\n        </style>\n        <div id=\"b\">${b}</div>\n        <style></style>\n        <div id=\"c\">${c}</div>\n        <style></style> `;\n      renderShadowRoot(result, container);\n    };\n    renderTemplate('a', 'b', 'c');\n    const root = shadowRoot(container)!;\n    assert.equal(root.querySelector('#a')!.textContent, `a`);\n    assert.equal(root.querySelector('#b')!.textContent, `b`);\n    assert.equal(root.querySelector('#c')!.textContent, `c`);\n    const div = root.querySelector('div');\n    assert.equal(\n      getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n      '1px'\n    );\n    renderTemplate('a1', 'b1', 'c1');\n    assert.equal(root.querySelector('#a')!.textContent, `a1`);\n    assert.equal(root.querySelector('#b')!.textContent, `b1`);\n    assert.equal(root.querySelector('#c')!.textContent, `c1`);\n    // Style parts do not update.\n    assert.equal(\n      getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n      '1px'\n    );\n    wrap(document.body).removeChild(container);\n  });\n\n  test('parts around styles with parts render/update when stamped into multiple containers', () => {\n    const container = document.createElement('scope-3b');\n    wrap(document.body).appendChild(container);\n    const renderTemplate = (\n      a: string,\n      b: string,\n      c: string,\n      host = container\n    ) => {\n      const result = html`<style></style>\n        <div id=\"a\">${a}</div>\n        <style>\n          div {\n            border: 1px solid black;\n          }\n        </style>\n        <div id=\"b\">${b}</div>\n        <style></style>\n        <div id=\"c\">${c}</div>\n        <style></style> `;\n      renderShadowRoot(result, host);\n    };\n    // create a dummy element first\n    renderTemplate('', '', '', document.createElement('scope-3b'));\n    // then test the 2nd element made for this scope\n    renderTemplate('a', 'b', 'c');\n    const root = shadowRoot(container)!;\n    assert.equal(root.querySelector('#a')!.textContent, `a`);\n    assert.equal(root.querySelector('#b')!.textContent, `b`);\n    assert.equal(root.querySelector('#c')!.textContent, `c`);\n    const div = root.querySelector('div');\n    assert.equal(\n      getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n      '1px'\n    );\n    renderTemplate('a1', 'b1', 'c1');\n    assert.equal(root.querySelector('#a')!.textContent, `a1`);\n    assert.equal(root.querySelector('#b')!.textContent, `b1`);\n    assert.equal(root.querySelector('#c')!.textContent, `c1`);\n    // Style parts do not update.\n    assert.equal(\n      getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n      '1px'\n    );\n    wrap(document.body).removeChild(container);\n  });\n\n  test('empty styles are ok', function () {\n    const container1 = document.createElement('scope-empty-style');\n    wrap(document.body).appendChild(container1);\n    const renderTemplate = (foo: string, container: Element) => {\n      const result = html`<div id=\"a\">${foo}</div>\n        <style></style>\n        <div id=\"b\">${foo}</div>`;\n      renderShadowRoot(result, container);\n    };\n    renderTemplate('foo', container1);\n    assert.equal(\n      shadowRoot(container1)!.querySelector('#a')!.textContent,\n      `foo`\n    );\n    assert.equal(\n      shadowRoot(container1)!.querySelector('#b')!.textContent,\n      `foo`\n    );\n    const container2 = document.createElement('scope-empty-style');\n    wrap(document.body).appendChild(container2);\n    renderTemplate('bar', container2);\n    assert.equal(\n      shadowRoot(container2)!.querySelector('#a')!.textContent,\n      `bar`\n    );\n    assert.equal(\n      shadowRoot(container2)!.querySelector('#b')!.textContent,\n      `bar`\n    );\n    wrap(document.body).removeChild(container1);\n    wrap(document.body).removeChild(container2);\n  });\n\n  // TODO(sorvell): This will only be supported via static bindings.\n  test.skip('part values render into styles once per scope', function () {\n    if (\n      typeof extraGlobals.ShadyDOM === 'undefined' ||\n      !extraGlobals.ShadyDOM.inUse\n    ) {\n      this.skip();\n      return;\n    }\n    const container = document.createElement('scope-3');\n    wrap(document.body).appendChild(container);\n    const renderTemplate = (border: string) => {\n      const result = html`\n        <style>\n          div {\n            border: ${border};\n          }\n        </style>\n        <div>Testing...</div>\n      `;\n      renderShadowRoot(result, container);\n    };\n    renderTemplate('1px solid black');\n    const div = shadowRoot(container)!.querySelector('div');\n    assert.equal(\n      getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n      '1px'\n    );\n    renderTemplate('2px solid black');\n    assert.equal(\n      getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n      '1px'\n    );\n    wrap(document.body).removeChild(container);\n  });\n\n  test('parts around <slot> elements', () => {\n    const el = document.createElement('slot-host');\n    wrap(document.body).appendChild(el);\n    const render = (title: string) => {\n      renderShadowRoot(\n        html`<slot name=\"before\"> </slot>${title}<slot name=\"after\"></slot>`,\n        el\n      );\n    };\n    render('foo');\n    assert.equal(shadowRoot(el)?.textContent, ' foo');\n    render('bar');\n    assert.equal(shadowRoot(el)?.textContent, ' bar');\n    render('');\n    assert.equal(shadowRoot(el)?.textContent, ' ');\n    render('zot');\n    assert.equal(shadowRoot(el)?.textContent, ' zot');\n    const c1 = document.createElement('div');\n    (wrap(c1) as Element).setAttribute('slot', 'before');\n    wrap(el).appendChild(c1);\n    assert.equal(shadowRoot(el)?.textContent, ' zot');\n    render('c1');\n    assert.equal(shadowRoot(el)?.textContent, ' c1');\n    const c2 = document.createElement('div');\n    (wrap(c2) as Element).setAttribute('slot', 'after');\n    wrap(el).appendChild(c2);\n    render('c1c2');\n    assert.equal(shadowRoot(el)?.textContent, ' c1c2');\n    wrap(el).textContent = '';\n    assert.equal(shadowRoot(el)?.textContent, ' c1c2');\n    wrap(document.body).removeChild(el);\n  });\n\n  test('`repeat` in shadowRoot', () => {\n    const el = document.createElement('div');\n    const listRefs: Array<{value?: Element | undefined}> = [];\n    wrap(document.body).appendChild(el);\n    const render = (data: number[]) => {\n      listRefs.length = 0;\n      data.forEach((_i: number) => listRefs.push(createRef()));\n      const list = repeat(\n        data,\n        (i) => i,\n        // prettier-ignore\n        (i: number) => html`<span ${ref(listRefs[i])}>${i}</span>`\n      );\n      renderShadowRoot(html`<span>[</span>${list}<span>]</span>`, el);\n    };\n    render([0, 1, 2]);\n    assert.equal(shadowRoot(el)?.textContent, '[012]');\n    render([]);\n    assert.equal(shadowRoot(el)?.textContent, '[]');\n    render([4, 5, 6, 7]);\n    assert.equal(shadowRoot(el)?.textContent, '[4567]');\n    wrap(document.body).removeChild(el);\n  });\n\n  test('`repeat` in slots', () => {\n    const el = document.createElement('div');\n    const beforeSlotRef = createRef();\n    const afterSlotRef = createRef();\n    const shadowHostRef = createRef();\n    const listRefs: Array<{value?: Element | undefined}> = [];\n    wrap(document.body).appendChild(el);\n    const render = (title: string, data: string[]) => {\n      listRefs.length = 0;\n      data.forEach((_i: string) => listRefs.push(createRef()));\n      const list = repeat(\n        data,\n        (i) => i,\n        // prettier-ignore\n        (s: string, i: number) => html`<span slot=\"${s}\" ${ref(listRefs[i])}>item: ${i}</span>`\n      );\n      litRender(html`<div ${ref(shadowHostRef)}>${list}</div>`, el);\n      renderShadowRoot(\n        html`<slot name=\"before\" ${ref(\n          beforeSlotRef\n        )}></slot> ${title}<slot name=\"after\" ${ref(afterSlotRef)}></slot>`,\n        shadowHostRef.value!\n      );\n    };\n    render('foo', ['before', 'after', 'nope']);\n    assert.equal(shadowRoot(shadowHostRef.value!)?.textContent, ' foo');\n    assert.deepEqual(\n      (wrap(beforeSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      [listRefs[0].value!]\n    );\n    assert.deepEqual(\n      (wrap(afterSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      [listRefs[1].value!]\n    );\n    render('bar', ['after', 'after', 'nope', 'before', 'nope']);\n    assert.equal(shadowRoot(shadowHostRef.value!)?.textContent, ' bar');\n    assert.deepEqual(\n      (wrap(beforeSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      [listRefs[3].value!]\n    );\n    assert.deepEqual(\n      (wrap(afterSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      [listRefs[0].value!, listRefs[1].value!]\n    );\n    render('zot', []);\n    assert.equal(shadowRoot(shadowHostRef.value!)?.textContent, ' zot');\n    assert.deepEqual(\n      (wrap(beforeSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      []\n    );\n    assert.deepEqual(\n      (wrap(afterSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      []\n    );\n    wrap(document.body).removeChild(el);\n  });\n\n  test('`cache` in shadowRoot', () => {\n    const el = document.createElement('div');\n    const aRef = createRef();\n    const aTemplate = html`<span ${ref(aRef)}>A</span>`;\n    const bRef = createRef();\n    const bTemplate = html`<span ${ref(bRef)}>B</span>`;\n    wrap(document.body).appendChild(el);\n    const render = (value?: unknown) => {\n      renderShadowRoot(html`<span>[</span>${cache(value)}<span>]</span>`, el);\n    };\n    //\n    render(aTemplate);\n    assert.equal(shadowRoot(el)?.textContent, '[A]');\n    const aNode = aRef.value;\n    render();\n    assert.equal(shadowRoot(el)?.textContent, '[]');\n    render(aTemplate);\n    assert.equal(shadowRoot(el)?.textContent, '[A]');\n    assert.equal(aNode, aRef.value);\n    render(bTemplate);\n    assert.equal(shadowRoot(el)?.textContent, '[B]');\n    const bNode = bRef.value;\n    render(aTemplate);\n    assert.equal(shadowRoot(el)?.textContent, '[A]');\n    assert.equal(aNode, aRef.value);\n    render(bTemplate);\n    assert.equal(shadowRoot(el)?.textContent, '[B]');\n    assert.equal(bNode, bRef.value);\n    wrap(document.body).removeChild(el);\n  });\n\n  test('`cache` in slots', () => {\n    const el = document.createElement('div');\n    const beforeSlotRef = createRef();\n    const afterSlotRef = createRef();\n    const shadowHostRef = createRef();\n    const aRef = createRef();\n    const aTemplate = (slot: string) =>\n      html`<span slot=${slot} ${ref(aRef)}>A</span>`;\n    const bRef = createRef();\n    const bTemplate = (slot: string) =>\n      html`<span slot=${slot} ${ref(bRef)}>B</span>`;\n    wrap(document.body).appendChild(el);\n    const render = (value?: unknown) => {\n      litRender(html`<div ${ref(shadowHostRef)}>${cache(value)}</div>`, el);\n      renderShadowRoot(\n        html`<slot name=\"before\" ${ref(\n          beforeSlotRef\n        )}></slot>|<slot name=\"after\" ${ref(afterSlotRef)}></slot>`,\n        shadowHostRef.value!\n      );\n    };\n    //\n    render(aTemplate('before'));\n    assert.equal(wrap(shadowHostRef.value!).textContent, 'A');\n    const aNode = aRef.value!;\n    assert.deepEqual(\n      (wrap(beforeSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      [aNode]\n    );\n    assert.deepEqual(\n      (wrap(afterSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      []\n    );\n\n    render();\n    assert.equal(wrap(shadowHostRef.value!).textContent, '');\n    assert.deepEqual(\n      (wrap(beforeSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      []\n    );\n    assert.deepEqual(\n      (wrap(afterSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      []\n    );\n    render(aTemplate('after'));\n    assert.equal(wrap(shadowHostRef.value!).textContent, 'A');\n    assert.deepEqual(\n      (wrap(beforeSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      []\n    );\n    assert.deepEqual(\n      (wrap(afterSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      [aNode]\n    );\n    assert.equal(aNode, aRef.value);\n    render(bTemplate('before'));\n    assert.equal(wrap(shadowHostRef.value!).textContent, 'B');\n    const bNode = bRef.value!;\n    assert.deepEqual(\n      (wrap(beforeSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      [bNode]\n    );\n    assert.deepEqual(\n      (wrap(afterSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      []\n    );\n    render(aTemplate(''));\n    assert.equal(wrap(shadowHostRef.value!).textContent, 'A');\n    assert.equal(aNode, aRef.value);\n    assert.deepEqual(\n      (wrap(beforeSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      []\n    );\n    assert.deepEqual(\n      (wrap(afterSlotRef.value!) as HTMLSlotElement).assignedNodes(),\n      []\n    );\n    wrap(document.body).removeChild(el);\n  });\n});\n"]}
{"version":3,"file":"lit-html-apply_html-test.js","sourceRoot":"","sources":["../../../src/test/polyfill-support/lit-html-apply_html-test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport '../../polyfill-support.js';\n// Rename the html tag so that CSS linting doesn't warn on the non-standard\n// @apply syntax\nimport {html as htmlWithApply} from '../../lit-html.js';\nimport {renderShadowRoot} from '../test-utils/shadow-root.js';\nimport {assert} from '@esm-bundle/chai';\n\nconst extraGlobals = window as LitExtraGlobals;\n\nsuite('@apply', () => {\n  test('styles with css custom properties using @apply render', function () {\n    const container = document.createElement('scope-5');\n    document.body.appendChild(container);\n    const result = htmlWithApply`\n      <style>\n        :host {\n          --batch: {\n            border: 3px solid orange;\n            padding: 4px;\n          };\n        }\n        div {\n          @apply --batch;\n        }\n      </style>\n      <div>Testing...</div>\n    `;\n    renderShadowRoot(result, container);\n    extraGlobals.ShadyCSS?.styleElement(container);\n    const div = container.shadowRoot!.querySelector('div');\n    const computedStyle = getComputedStyle(div!);\n    assert.equal(\n      computedStyle.getPropertyValue('border-top-width').trim(),\n      '3px'\n    );\n    assert.equal(computedStyle.getPropertyValue('padding-top').trim(), '4px');\n    document.body.removeChild(container);\n  });\n\n  test('styles with css custom properties using @apply render in different contexts', async () => {\n    const applyUserContent = htmlWithApply`\n        <style>\n          div {\n            border-top: 2px solid black;\n            margin-top: 4px;\n            @apply --stuff;\n          }\n        </style>\n        Hello\n        <div>Testing...</div>\n      `;\n\n    // Test an apply user and multiple times to see that multiple stampings\n    // work.\n    const testApplyUser = () => {\n      const applyUser = document.createElement('apply-user');\n      document.body.appendChild(applyUser);\n      renderShadowRoot(applyUserContent, applyUser);\n      extraGlobals.ShadyCSS?.styleElement(applyUser);\n      const applyUserDiv = applyUser.shadowRoot!.querySelector('div');\n      const applyUserStyle = getComputedStyle(applyUserDiv!);\n      assert.equal(\n        applyUserStyle.getPropertyValue('border-top-width').trim(),\n        '2px'\n      );\n      assert.equal(applyUserStyle.getPropertyValue('margin-top').trim(), '4px');\n      document.body.removeChild(applyUser);\n    };\n    testApplyUser();\n    testApplyUser();\n\n    // Test an apply user inside a producer and do it multiple times to see\n    // that multiple stampings work.\n    const testApplyProducer = () => {\n      const producerContent = htmlWithApply`\n      <style>\n        :host {\n          --stuff: {\n            border-top: 10px solid orange;\n            padding-top: 20px;\n          };\n        }\n\n        #test {\n          color: red;\n        }\n      </style>\n      <div id=\"test\" ?some-attr=${true}>${'test'}</div>\n      <apply-user></apply-user>\n      <apply-user></apply-user>\n    `;\n      const applyProducer = document.createElement('apply-producer');\n      document.body.appendChild(applyProducer);\n      renderShadowRoot(producerContent, applyProducer);\n      // Check that part values are expected.\n      const div = applyProducer.shadowRoot!.querySelector('#test');\n      assert.ok(div?.hasAttribute('some-attr'));\n      assert.ok(div?.textContent, 'test');\n      extraGlobals.ShadyCSS?.styleElement(applyProducer);\n      const usersInProducer =\n        applyProducer.shadowRoot!.querySelectorAll('apply-user');\n      renderShadowRoot(applyUserContent, usersInProducer[0]);\n      extraGlobals.ShadyCSS?.styleElement(usersInProducer[0]);\n      renderShadowRoot(applyUserContent, usersInProducer[1]);\n      extraGlobals.ShadyCSS?.styleElement(usersInProducer[1]);\n      const userInProducerStyle1 = getComputedStyle(\n        usersInProducer[0].shadowRoot!.querySelector('div')!\n      );\n      const userInProducerStyle2 = getComputedStyle(\n        usersInProducer[1].shadowRoot!.querySelector('div')!\n      );\n      assert.equal(\n        userInProducerStyle1.getPropertyValue('border-top-width').trim(),\n        '10px'\n      );\n      assert.equal(\n        userInProducerStyle1.getPropertyValue('padding-top').trim(),\n        '20px'\n      );\n      assert.equal(\n        userInProducerStyle2.getPropertyValue('border-top-width').trim(),\n        '10px'\n      );\n      assert.equal(\n        userInProducerStyle2.getPropertyValue('padding-top').trim(),\n        '20px'\n      );\n      document.body.removeChild(applyProducer);\n    };\n\n    // test multiple times to make sure there's no bad interaction\n    testApplyProducer();\n    testApplyUser();\n    testApplyProducer();\n  });\n\n  test('@apply styles flow to custom elements that render in connectedCallback', () => {\n    class E extends HTMLElement {\n      connectedCallback() {\n        const result = htmlWithApply`<style>\n              div {\n                border-top: 6px solid black;\n                margin-top: 8px;\n                @apply --stuff-ce;\n              }\n            </style>\n            <div>Testing...</div>`;\n        renderShadowRoot(result, this);\n        extraGlobals.ShadyCSS?.styleElement(this);\n      }\n    }\n    customElements.define('apply-user-ce1', E);\n    customElements.define('apply-user-ce2', class extends E {});\n\n    const producerContent = htmlWithApply`\n          <style>\n            apply-user-ce1 {\n              --stuff-ce: {\n                border-top: 10px solid orange;\n                padding-top: 20px;\n              };\n            }\n\n            apply-user-ce2 {\n              --stuff-ce: {\n                border-top: 5px solid orange;\n                padding-top: 10px;\n              };\n            }\n          </style>\n          <apply-user-ce1></apply-user-ce1>\n          <apply-user-ce2></apply-user-ce2>\n        `;\n    const applyProducer = document.createElement('apply-producer-ce');\n    document.body.appendChild(applyProducer);\n    renderShadowRoot(producerContent, applyProducer);\n    const user1 = applyProducer.shadowRoot!.querySelector('apply-user-ce1')!;\n    const userInProducerStyle1 = getComputedStyle(\n      user1.shadowRoot!.querySelector('div')!\n    );\n    const user2 = applyProducer.shadowRoot!.querySelector('apply-user-ce2')!;\n    const userInProducerStyle2 = getComputedStyle(\n      user2.shadowRoot!.querySelector('div')!\n    );\n    assert.equal(\n      userInProducerStyle1.getPropertyValue('border-top-width').trim(),\n      '10px'\n    );\n    assert.equal(\n      userInProducerStyle1.getPropertyValue('padding-top').trim(),\n      '20px'\n    );\n    assert.equal(\n      userInProducerStyle2.getPropertyValue('border-top-width').trim(),\n      '5px'\n    );\n    assert.equal(\n      userInProducerStyle2.getPropertyValue('padding-top').trim(),\n      '10px'\n    );\n    document.body.removeChild(applyProducer);\n  });\n\n  test('empty style', function () {\n    const container = document.createElement('empty-style');\n    document.body.appendChild(container);\n    const result = htmlWithApply`\n      <style></style>\n      <div>Testing...</div>\n    `;\n    renderShadowRoot(result, container);\n    extraGlobals.ShadyCSS?.styleElement(container);\n    document.body.removeChild(container);\n  });\n});\n"]}
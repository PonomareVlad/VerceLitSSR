{"version":3,"file":"directive-helpers_test.js","sourceRoot":"","sources":["../../src/test/directive-helpers_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {html, ChildPart, render, svg} from '../lit-html.js';\nimport {directive, Directive} from '../directive.js';\nimport {assert} from '@esm-bundle/chai';\nimport {stripExpressionComments} from './test-utils/strip-markers.js';\nimport {\n  getDirectiveClass,\n  insertPart,\n  isDirectiveResult,\n  isPrimitive,\n  isTemplateResult,\n  removePart,\n  TemplateResultType,\n} from '../directive-helpers.js';\nimport {classMap} from '../directives/class-map.js';\n\nsuite('directive-helpers', () => {\n  let container: HTMLDivElement;\n\n  setup(() => {\n    container = document.createElement('div');\n  });\n\n  test('isPrimitive', () => {\n    assert.isTrue(isPrimitive(null));\n    assert.isTrue(isPrimitive(undefined));\n    assert.isTrue(isPrimitive(true));\n    assert.isTrue(isPrimitive(1));\n    assert.isTrue(isPrimitive('a'));\n    assert.isTrue(isPrimitive(Symbol()));\n\n    // Can't polyfill this syntax:\n    // assert.isTrue(isPrimitive(1n));\n\n    assert.isFalse(isPrimitive({}));\n    assert.isFalse(isPrimitive(() => {}));\n  });\n\n  test('isTemplateResult', () => {\n    assert.isTrue(isTemplateResult(html``));\n    assert.isTrue(isTemplateResult(svg``));\n    assert.isTrue(isTemplateResult(html``, TemplateResultType.HTML));\n    assert.isTrue(isTemplateResult(svg``, TemplateResultType.SVG));\n\n    assert.isFalse(isTemplateResult(null));\n    assert.isFalse(isTemplateResult(undefined));\n    assert.isFalse(isTemplateResult({}));\n    assert.isFalse(isTemplateResult(html``, TemplateResultType.SVG));\n    assert.isFalse(isTemplateResult(svg``, TemplateResultType.HTML));\n    assert.isFalse(isTemplateResult(null, TemplateResultType.HTML));\n    assert.isFalse(isTemplateResult(undefined, TemplateResultType.HTML));\n    assert.isFalse(isTemplateResult({}, TemplateResultType.HTML));\n  });\n\n  test('isDirectiveResult', () => {\n    assert.isTrue(isDirectiveResult(classMap({})));\n\n    assert.isFalse(isDirectiveResult(null));\n    assert.isFalse(isDirectiveResult(undefined));\n    assert.isFalse(isDirectiveResult({}));\n  });\n\n  test('getDirectiveClass', () => {\n    assert.instanceOf(getDirectiveClass(classMap({}))?.prototype, Directive);\n    assert.equal(getDirectiveClass(null), undefined);\n    assert.equal(getDirectiveClass(undefined), undefined);\n    assert.equal(getDirectiveClass({}), undefined);\n  });\n\n  test('insertPart', () => {\n    class TestDirective extends Directive {\n      render(v: unknown) {\n        return v;\n      }\n\n      update(part: ChildPart, [v]: Parameters<this['render']>) {\n        // Create two parts and remove the first, then the second to make sure\n        // that removing the first doesn't move the second's markers. This\n        // fails if the parts accidentally share a marker.\n        const childPart2 = insertPart(part, undefined);\n        const childPart1 = insertPart(part, undefined, childPart2);\n        removePart(childPart1);\n        removePart(childPart2);\n        return v;\n      }\n    }\n    const testDirective = directive(TestDirective);\n\n    const go = (v: unknown) =>\n      render(html`<div>${testDirective(v)}</div>`, container);\n\n    go('A');\n    assert.equal(stripExpressionComments(container.innerHTML), '<div>A</div>');\n  });\n});\n"]}